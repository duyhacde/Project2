{"ast":null,"code":"var _jsxFileName = \"D:\\\\BKA_subject\\\\20212\\\\Project_II\\\\pizzaHust\\\\Project2-PizzaHust\\\\src\\\\components\\\\mainpages\\\\cart\\\\PaypalButton.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PaypalButton extends React.Component {\n  render() {\n    const onSuccess = payment => {\n      // Congratulation, it came here means everything's fine!\n      console.log(\"The payment was succeeded!\", payment); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n\n      this.props.tranSuccess(payment);\n    };\n\n    const onCancel = data => {\n      // User pressed \"cancel\" or close Paypal's popup!\n      console.log('The payment was cancelled!', data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onError = err => {\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n      console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n\n    let env = 'sandbox'; // you can set here to 'production' for production\n\n    let currency = 'USD'; // or you can set this value from your props or state\n\n    let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: 'YOUR-sandbox-APP-ID',\n      production: 'YOUR-PRODUCTION-APP-ID'\n    }; // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n    // For production app-ID:\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n    let style = {\n      size: 'small',\n      color: 'blue',\n      shape: 'rect',\n      label: 'checkout',\n      tagline: false\n    };\n    return /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n      env: env,\n      client: client,\n      currency: currency,\n      total: total,\n      onError: onError,\n      onSuccess: onSuccess,\n      onCancel: onCancel,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","PaypalExpressBtn","PaypalButton","Component","render","onSuccess","payment","console","log","props","tranSuccess","onCancel","data","onError","err","env","currency","total","client","sandbox","production","style","size","color","shape","label","tagline"],"sources":["D:/BKA_subject/20212/Project_II/pizzaHust/Project2-PizzaHust/src/components/mainpages/cart/PaypalButton.js"],"sourcesContent":["import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n \r\nexport default class PaypalButton extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\r\n                    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n                    this.props.tranSuccess(payment)\r\n        }\r\n \r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n \r\n        const client = {\r\n            sandbox:    'YOUR-sandbox-APP-ID',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        let style = {\r\n            size: 'small',\r\n            color: 'blue',\r\n            shape: 'rect',\r\n            label: 'checkout',\r\n            tagline: false\r\n        }\r\n\r\n        return (\r\n            <PaypalExpressBtn \r\n            env={env} client={client} \r\n            currency={currency} \r\n            total={total} onError={onError} \r\n            onSuccess={onSuccess} onCancel={onCancel}\r\n            style={style} />\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;EACtDC,MAAM,GAAG;IACL,MAAMC,SAAS,GAAIC,OAAD,IAAa;MAC3B;MACEC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,OAA1C,EAFyB,CAGnB;;MACA,KAAKG,KAAL,CAAWC,WAAX,CAAuBJ,OAAvB;IACX,CALD;;IAOA,MAAMK,QAAQ,GAAIC,IAAD,IAAU;MACvB;MACAL,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,IAA1C,EAFuB,CAGvB;IACH,CAJD;;IAMA,MAAMC,OAAO,GAAIC,GAAD,IAAS;MACrB;MACAP,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,GAAtB,EAFqB,CAGrB;MACA;IACH,CALD;;IAOA,IAAIC,GAAG,GAAG,SAAV,CArBK,CAqBgB;;IACrB,IAAIC,QAAQ,GAAG,KAAf,CAtBK,CAsBiB;;IACtB,IAAIC,KAAK,GAAG,KAAKR,KAAL,CAAWQ,KAAvB,CAvBK,CAuByB;IAC9B;;IAEA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAK,qBADD;MAEXC,UAAU,EAAE;IAFD,CAAf,CA1BK,CA8BL;IACA;IACA;IACA;IACA;IAEA;;IACA,IAAIC,KAAK,GAAG;MACRC,IAAI,EAAE,OADE;MAERC,KAAK,EAAE,MAFC;MAGRC,KAAK,EAAE,MAHC;MAIRC,KAAK,EAAE,UAJC;MAKRC,OAAO,EAAE;IALD,CAAZ;IAQA,oBACI,QAAC,gBAAD;MACA,GAAG,EAAEX,GADL;MACU,MAAM,EAAEG,MADlB;MAEA,QAAQ,EAAEF,QAFV;MAGA,KAAK,EAAEC,KAHP;MAGc,OAAO,EAAEJ,OAHvB;MAIA,SAAS,EAAER,SAJX;MAIsB,QAAQ,EAAEM,QAJhC;MAKA,KAAK,EAAEU;IALP;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH;;AAtDqD"},"metadata":{},"sourceType":"module"}